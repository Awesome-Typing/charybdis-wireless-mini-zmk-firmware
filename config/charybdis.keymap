#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 // thumb cluster for both hands

#include "macros.dtsi"
#include "behaviors.dtsi"
#include "combos.dtsi"

#define BASE 0
#define GAME 1
#define NAV  2
#define DIG  3
#define SYS  4
#define MOUSE  5
#define SCROLL 6
#define SNIPE 8

/ {
    trackball_listener {
        compatible = "zmk,input-listener";
        device = <&vtrackball>;
        // scaler: first is multiplier, second one is divider.
        // temp layer: first argument is layer, second is time in ms
        input-processors = <&zip_xy_scaler 1 3>, <&zip_temp_layer MOUSE 1000>;

        snipe {
            layers = <SNIPE>;
            input-processors = <&zip_xy_scaler 1 18>;
        };

        scroll {
            layers = <SCROLL>;
            // scaler: first is multiplier, second one is divider.
            input-processors = <&zip_xy_to_scroll_mapper>, <&zip_scroll_transform(INPUT_TRANSFORM_XY_SWAP)>, <&zip_scroll_scaler 1 72>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        BASE {
            label = "Base";
            bindings = <
// ╭────────────────┬─────────────────┬─────────────────────────────┬────────────────────┬──────────────────────┬────────╮  ╭────────────────┬─────────────────────────┬────────────────────────────┬──────────────────────────┬──────────────────────────┬──────────────╮
    &lt SYS ESC       &kp Q             &kp W                        &kp E                 &kp R                   &kp T       &kp Y             &kp U                   &kp I                        &kp O                      &kp P                      &to GAME
// ├────────────────┼─────────────────┼─────────────────────────────┼────────────────────┼──────────────────────┼────────┤  ├────────────────┼─────────────────────────┼────────────────────────────┼──────────────────────────┼──────────────────────────┼──────────────┤
    &kp TAB           &hm_left LCTRL A  &hm_left LEFT_ALT S          &hm_left LSHFT D      &hm_left LEFT_COMMAND F &kp G       &kp H             &hm_right RIGHT_GUI J   &hm_right RSHFT K            &hm_right RIGHT_ALT L      &hm_right RCTRL SEMICOLON  &all_quotes
// ├────────────────┼─────────────────┼─────────────────────────────┼────────────────────┼──────────────────────┼────────┤  ├────────────────┼─────────────────────────┼────────────────────────────┼──────────────────────────┼──────────────────────────┼──────────────┤
    &to NAV           &kp Z             &kp X                        &kp C                 &kp V                   &kp B       &kp N             &kp M                   &hm_right_layer SNIPE COMMA  &hm_right_layer SCROLL DOT &comment_or 0 SLASH        &to DIG
// ╰────────────────┴─────────────────┴─────────────────────────────┼────────────────────┼──────────────────────┼────────┤  ├────────────────┼─────────────────────────┼────────────────────────────┴──────────────────────────┴──────────────────────────┴──────────────╯
                                                                &sk LEFT_COMMAND     &space_or_super SPACE SPACE &mo DIG      &lt SYS ESC       &kp RET
                                                            // ╰───────────────────┴────────────────────────────┴────────╯  ╰────────────────┴─────────────────────────╯
            >;
        };

        GAME {
            label = "Game";
            bindings = <
// ╭────────────────┬──────────────┬─────────────────────────┬─────────────────────────────┬──────────────────┬──────────────╮  ╭──────────────┬─────────────────┬──────────────────────────────────┬──────────────────────────────┬────────────────────────┬─────────╮
    &lt BASE ESC      &kp Q          &kp W                     &kp E                         &kp R              &kp T             &kp Y          &kp U             &kp I                              &kp O                          &kp P                   &to BASE
// ├────────────────┼──────────────┼─────────────────────────┼─────────────────────────────┼──────────────────┼──────────────┤  ├──────────────┼─────────────────┼──────────────────────────────────┼──────────────────────────────┼────────────────────────┼─────────┤
    &kp TAB           &kp A          &kp S                     &kp D                         &kp F              &kp G             &kp H          &kp J             &kp K                              &kp L                          &kp SEMICOLON           &trans
// ├────────────────┼──────────────┼─────────────────────────┼─────────────────────────────┼──────────────────┼──────────────┤  ├──────────────┼─────────────────┼──────────────────────────────────┼──────────────────────────────┼────────────────────────┼─────────┤
    &kp LSHFT         &kp Z          &kp X                     &kp C                         &kp V              &kp B             &kp N          &kp M             &kp COMMA                          &kp DOT                        &kp SLASH               &trans
// ╰────────────────┴──────────────┴─────────────────────────┼─────────────────────────────┼──────────────────┼──────────────┤  ├──────────────┼─────────────────┼──────────────────────────────────┴──────────────────────────────┴────────────────────────┴─────────╯
                                                               &sk LEFT_COMMAND              &kp SPACE          &mo DIG           &lt SYS ESC    &kp RET
//                                                           ╰─────────────────────────────┴──────────────────┴──────────────╯  ╰──────────────┴─────────────────╯
            >;
        };

        Navigation {
            label = "Navigation";
            bindings = <
// ╭────────────────┬──────────┬──────────────────┬─────────────┬────────┬─────────────╮        ╭─────────────┬──────────────────┬──────────────┬──────────────────┬──────────────────────┬─────────╮
     &trans          &trans       &trans            &trans         &trans  &trans                 &none         &kp HOME           &kp UP         &kp END            &kt PAGE_UP            &trans
// ├────────────────┼──────────┼──────────────────┼─────────────┼────────┼─────────────┤        ├─────────────┼──────────────────┼──────────────┼──────────────────┼──────────────────────┼─────────┤
     &trans          &trans       &trans            &trans         &trans  &trans                 &kp LA(LEFT)  &kp LEFT           &kp DOWN       &kp RIGHT          &kp LA(RIGHT)          &trans
// ├────────────────┼──────────┼──────────────────┼─────────────┼────────┼─────────────┤        ├─────────────┼──────────────────┼──────────────┼──────────────────┼──────────────────────┼─────────┤
     &trans          &trans       &trans            &trans         &trans  &trans                 &none         &kp LA(LEFT)       &none          &kp LA(RIGHT)      &kt PAGE_DOWN          &trans
// ╰────────────────┴──────────┴──────────────────┼─────────────┼────────┼─────────────┤        ├─────────────┼──────────────────┼──────────────┼──────────────────┴──────────────────────┴─────────╯
                                &trans              &space_or_super SPACE SPACE &trans            &trans           &trans
//                            ╰───────────────────┴───────────────────┴────────────────╯        ╰─────────────┴──────────────────╯
            >;
        };


        digits {
            label = "Digits";
            bindings = <
// ╭────────────────┬────────────────────────┬──────────────────────┬────────────────────────────┬──────────────────────────────┬────────────────────────────────────╮        ╭────────────────┬──────────────────┬──────────────┬──────────────────┬──────────────────────┬─────────╮
     &trans              &kp TILDE                 &kp DOLLAR             &kp LEFT_BRACE               &kp RIGHT_BRACE                &more_or_equal                                 &kp PLUS         &kp N7             &kp N8         &kp N9             &kp SEMICOLON         &to BASE
// ├────────────────┼────────────────────────┼──────────────────────┼────────────────────────────┼──────────────────────────────┼────────────────────────────────────┤        ├────────────────┼──────────────────┼──────────────┼──────────────────┼──────────────────────┼─────────┤
     &trans              &hm_left LCTRL EXCLAMATION  &hm_left LEFT_ALT AT_SIGN   &hm_left LSHFT LEFT_PARENTHESIS  &hm_left LEFT_COMMAND RIGHT_PARENTHESIS  &fun_arrow_right         &kp EQUAL        &kp N4             &kp N5         &kp N6             &kp KP_MULTIPLY       &trans
// ├────────────────┼────────────────────────┼──────────────────────┼────────────────────────────┼──────────────────────────────┼────────────────────────────────────┤        ├────────────────┼──────────────────┼──────────────┼──────────────────┼──────────────────────┼─────────┤
     &trans              &kp PIPE              &kp AMPERSAND              &mt LESS_THAN LEFT_BRACKET   &mt GREATER_THAN RIGHT_BRACKET  &less_or_equal                                 &mt UNDER MINUS  &kp N1             &kp N2         &kp N3             &kp PERIOD           &kp SLASH
// ╰────────────────┴────────────────────────┴──────────────────────┼────────────────────────────┼──────────────────────────────┼────────────────────────────────────┤        ├────────────────┼──────────────────┼──────────────┼──────────────────┴──────────────────────┴─────────╯
                                                                      &trans                            &trans                          &trans                                            &trans              &kp N0
//                                                                  ╰────────────────────────────┴──────────────────────────────┴────────────────────────────────────╯        ╰────────────────┴──────────────────╯
            >;
        };

         system {
             label = "SYSTEM";
             bindings = <
// ╭────────────────┬─────────┬─────────┬──────────────┬────────────┬─────────────╮        ╭─────────────┬──────────────┬────────────┬────────────┬──────────┬─────────╮
     &trans           &kp F1    &kp F2    &kp F3         &kp F4       &kp F5                 &kp F6        &kp F7         &kp F8       &kp F9       &kp F10    &trans
// ├────────────────┼─────────┼─────────┼──────────────┼────────────┼─────────────┤        ├─────────────┼──────────────┼────────────┼────────────┼──────────┼─────────┤
     &trans           &trans    &trans    &trans         &out OUT_USB &out OUT_BLE           &kp C_MUTE    &kp C_PP       &trans       &trans       &trans      &trans
// ├────────────────┼─────────┼─────────┼──────────────┼────────────┼─────────────┤        ├─────────────┼──────────────┼────────────┼────────────┼──────────┼─────────┤
     &bt BT_CLR       &trans    &trans    &out OUT_TOG   &bt BT_PRV   &bt BT_NXT             &kp C_VOL_DN  &kp C_VOL_UP   &kp C_PREV   &kp C_NEXT   &trans      &studio_unlock
 // ╰───────────────┴─────────┴─────────┼──────────────┼────────────┼─────────────┤        ├─────────────┼──────────────┼────────────┼────────────┴──────────┴──────────╯
                                           &trans        &trans       &trans                 &trans           &trans
 //                                     ╰──────────────┴────────────┴─────────────╯        ╰─────────────┴──────────────╯
             >;
         };

        AUTO-MOUSE {
            label = "Mouse";
            bindings = <
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
                        &mkp LCLK  &trans  &mkp RCLK    &trans  &trans
            >;
        };

        SCROLL {
            label = "Scroll";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        SNIPE {
            label = "Snipe";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};